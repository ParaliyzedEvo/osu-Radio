name: osu!Radio

on:
  push:
    tags:
      - 'v*'
      - '[0-9]*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        architecture: [x64]
    name: Build on ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        shell: bash

      - name: Convert .png to .icns (macOS only)
        if: matrix.os == 'macos-latest'
        run: |
          brew install imagemagick
          ICON_NAME="Osu!RadioIcon"
          ICONSET="${ICON_NAME}.iconset"
      
          mkdir -p "$ICONSET"
          magick convert "$ICON_NAME.png" "$ICONSET/icon_1024x1024.png"
      
          sips -z 16 16     "$ICONSET/icon_1024x1024.png" --out "$ICONSET/icon_16x16.png"
          sips -z 32 32     "$ICONSET/icon_1024x1024.png" --out "$ICONSET/icon_16x16@2x.png"
          sips -z 32 32     "$ICONSET/icon_1024x1024.png" --out "$ICONSET/icon_32x32.png"
          sips -z 64 64     "$ICONSET/icon_1024x1024.png" --out "$ICONSET/icon_32x32@2x.png"
          sips -z 128 128   "$ICONSET/icon_1024x1024.png" --out "$ICONSET/icon_128x128.png"
          sips -z 256 256   "$ICONSET/icon_1024x1024.png" --out "$ICONSET/icon_128x128@2x.png"
          sips -z 256 256   "$ICONSET/icon_1024x1024.png" --out "$ICONSET/icon_256x256.png"
          sips -z 512 512   "$ICONSET/icon_1024x1024.png" --out "$ICONSET/icon_256x256@2x.png"
          sips -z 512 512   "$ICONSET/icon_1024x1024.png" --out "$ICONSET/icon_512x512.png"
          cp "$ICONSET/icon_1024x1024.png" "$ICONSET/icon_512x512@2x.png"
      
          iconutil -c icns "$ICONSET" -o "${ICON_NAME}.icns"
          rm -r "$ICONSET"

      - name: Build spec file
        shell: bash
        run: |
            if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
             pyinstaller Osu!Radio.spec

            elif [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
              pyinstaller Osu!Radio-linux.spec

            elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
              pyinstaller Osu!Radio-macos.spec
            fi

      - name: Install create-dmg (macOS only)
        if: matrix.os == 'macos-latest'
        run: brew install create-dmg
    
      - name: Create .dmg installer (macOS only)
        if: matrix.os == 'macos-latest'
        run: |
          cp -r "Background Video" "dist/osu!Radio.app/Contents/Resources/"
          create-dmg \
            --volname "osu!Radio Installer" \
            --volicon "dist/osu!Radio.app/Contents/Resources/Osu!RadioIcon.icns" \
            --window-pos 200 120 \
            --window-size 854 480 \
            --icon-size 100 \
            --app-drop-link 450 185 \
            osu!Radio.dmg \
            dist/osu!Radio.app

      - name: Create .pkg installer (macOS only)
        if: matrix.os == 'macos-latest'
        run: |
          pkgbuild \
            --root dist/osu!Radio.app \
            --identifier com.paraliyzedevo.osuradio \
            --version 1.0.0 \
            --install-location /Applications \
            dist/osu!Radio.pkg

      - name: Package output
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            7z a osu!Radio-windows.zip dist/osu!Radio/*
          elif [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            mkdir -p 'Osu!Radio'
            cp -r 'dist/osu!Radio' 'Osu!Radio/'
            cp -r 'Background Video' 'Osu!Radio/'
            cp 'Osu!RadioIcon.ico' 'Osu!Radio/'
            tar -czf 'osu!Radio.tar.gz' -C 'Osu!Radio' .
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            cp "dist/osu!Radio.pkg" "osu!Radio.pkg"
          fi
        shell: bash
        
      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          draft: true
          # Windows: .zip
          # Linux: .tar.gz
          # macOS: .dmg and .app
          files: |
              osu!Radio-windows.zip
              osu!Radio.tar.gz
              osu!Radio.pkg
              osu!Radio.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
